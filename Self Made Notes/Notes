SEO Optimized
H1 tag is used for SEO Optimization

<thead>, <tbody>, <tfoot>, <caption>, 
With iFrames , we can integrate anything , like any 3rd party application , website, component | But can increadse loading time | Security breach | MOst of the cases used in attaching videos in websites | widgets | Advertisement

INDEX

1. All Headings
2. Block Level & Inline Elements | SEO | tags-> <a></a>, p, span, image(img)
3. SEO | Google Bot Crawlers ol, ul
4. Tables colspan, rowspan
   Periodic Table Project
5. Forms -> all inputs and register button
6. Integrating sheets db api with forms
7. iFrames
8. Portfolio -> HTML vs HTML5
9.
10. test

HTML Days OVER
CSS STARTS

11. Introduction to CSS -> Inline, internal, External CSS, Browser Applies css to code (Highest priority)
    Browser > Inline > (Internal >= External) [Based on the writing practices][Call Order]{No Priority}

Browser > !important > Inline CSS > Internal/External CSS (later-written > earlier-written) > Browser defaults

Cascading Style Sheet -> Cascading means heirarchial manner.
5 Rules :- + Priority
Universal Rule -> Element Specific Rule -> Class/ID Specific Rule -> Inline CSS Rule -> Imoprtant Specific Rule

12. Selectors -> Priority : Universal -> Element -> class -> ID Selector -> Inline CSS -> !important

13. CSS BOX Model -> Content , Padding, Border, Margin ->
    Display properties : Inline
    Border-box : achieve total height and width

14.1 CSS Frameworks
Some css Frameworks to work better and faster 1. Chakra UI - Mostly React 2. Shadcn UI - Mostly NextJS 3. Ant Design 4. Material UI Design - MUI 5. Tailwind CSS

14.2 Use "Color hunt" to find color combinations

15. CSS Gradient Project

16. Inline elements dont depend/respect height width and margin and certain more properties. And therefore sometimes these properties are not applied to inline level elements
    Whereas Block level elements respect all the properties
    We can change inline to block level elements via using display: block.

Block Level Elements:
1. h1 to h6
2. div tags
3. article tag
4. hr and br tag
5. nav
6. footer
7. section
8. main 
9. aside 
10. ul and ol

Inline Elements:
1. span
2. label
3. input
4. img
5. p
6. video and audio 
7. button
8. li tag
9. a tag
10. sub and sup tag


17. Smooth Hover, After, hover properties, Input box CSS , caret

18. CSS Responsiveness
1. Absolute values or sizes are fixed or constant. Which doesn't react as per the size changes of display 
2. Relative values or sizes are dynamic means it will react as per the display size changes and the size will apply as per it's parent size or overall display size.
3. Relative value like % applied to any element are react as per it's parent element not the device screen size. 
For e.x: if we provide 100% value to height or width then it will check what is its parent element size is? If no parent then it checks the device width or height else it will apply as per its parent height or width.
4. Relative value like vh : is called viewport height it is used to style or apply height to any element and this unit will always be calculated as per the device screen height doesn't matter what  height size it's  parent has.
5. Relative value like vw:
The vw is stands for viewport width which is used to apply width to any element. Same as earlier vh this is also provide width size to element as per the width of the device screen by ignoring what's width size does its parent has.
6. Relative units for font sizes:
 - em:  this is the dynamic unit which is used to apply to fonts. em is calculated as 2 times to it's parent element font size. By default all text size is 16px so when we use 2em the size will be 2x of 16px.
The h1 tag has default style is font-size: 2em; which is 32px.
So, anytime you use em then always check what is your parent element is set font size as ?.

- rem:  this unit is same as em but it's calculated based on the root element which is html means doesn't matter what size is your parent element has the rem will be applied based on what font size does the html has.

h1 is 32px which is 2em
h2 is 24px which is 1.5em
h3 is 18.72px which is 1.17em
h4 is 16px which is null 
h5 is 13.28px which is  0.83em
h6 is 10.72px which is 0.67em
h4 in my browser size is not mentioned in em